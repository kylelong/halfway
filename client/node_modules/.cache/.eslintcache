[{"/Users/kylelong/halfway/client/src/index.tsx":"1","/Users/kylelong/halfway/client/src/reportWebVitals.ts":"2","/Users/kylelong/halfway/client/src/components/WordSwitcher.tsx":"3","/Users/kylelong/halfway/client/src/components/Menu/Menu.tsx":"4","/Users/kylelong/halfway/client/src/components/Logo/Logo.tsx":"5","/Users/kylelong/halfway/client/src/styles/common.tsx":"6","/Users/kylelong/halfway/client/src/App.tsx":"7","/Users/kylelong/halfway/client/src/components/Create/Create.tsx":"8","/Users/kylelong/halfway/client/src/components/Create/TinyEditor.jsx":"9","/Users/kylelong/halfway/client/src/components/Create/FilterMenu.tsx":"10","/Users/kylelong/halfway/client/src/components/Create/InputBox.tsx":"11","/Users/kylelong/halfway/client/src/components/Create/SelectMenu.tsx":"12","/Users/kylelong/halfway/client/src/types/basics.ts":"13","/Users/kylelong/halfway/client/src/components/Create/DropDownMenu.tsx":"14","/Users/kylelong/halfway/client/src/components/Create/TextArea.tsx":"15","/Users/kylelong/halfway/client/src/components/Create/Modal.tsx":"16","/Users/kylelong/halfway/client/src/components/About/Pricing.tsx":"17","/Users/kylelong/halfway/client/src/components/About/Footer.tsx":"18","/Users/kylelong/halfway/client/src/components/About/About.tsx":"19","/Users/kylelong/halfway/client/src/types/constants.ts":"20","/Users/kylelong/halfway/client/src/components/Create/OpenAIModal.tsx":"21"},{"size":554,"mtime":1696281989613,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1695871077228,"results":"24","hashOfConfig":"23"},{"size":957,"mtime":1695889020051,"results":"25","hashOfConfig":"23"},{"size":2256,"mtime":1696351296683,"results":"26","hashOfConfig":"23"},{"size":696,"mtime":1696039729997,"results":"27","hashOfConfig":"23"},{"size":589,"mtime":1696039781385,"results":"28","hashOfConfig":"23"},{"size":743,"mtime":1696350879271,"results":"29","hashOfConfig":"23"},{"size":27056,"mtime":1696369477754,"results":"30","hashOfConfig":"23"},{"size":1548,"mtime":1696281686925,"results":"31","hashOfConfig":"23"},{"size":7568,"mtime":1696370538384,"results":"32","hashOfConfig":"23"},{"size":668,"mtime":1696230359619,"results":"33","hashOfConfig":"23"},{"size":3634,"mtime":1696311646805,"results":"34","hashOfConfig":"23"},{"size":1833,"mtime":1696315038243,"results":"35","hashOfConfig":"23"},{"size":2872,"mtime":1696310528907,"results":"36","hashOfConfig":"23"},{"size":2113,"mtime":1696314686871,"results":"37","hashOfConfig":"23"},{"size":2518,"mtime":1696367078979,"results":"38","hashOfConfig":"23"},{"size":4172,"mtime":1696357704917,"results":"39","hashOfConfig":"23"},{"size":898,"mtime":1696140219389,"results":"40","hashOfConfig":"23"},{"size":14195,"mtime":1696351196638,"results":"41","hashOfConfig":"23"},{"size":168,"mtime":1696357669524,"results":"42","hashOfConfig":"23"},{"size":6513,"mtime":1696369463522,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1r84iqz",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/kylelong/halfway/client/src/index.tsx",[],[],["110"],"/Users/kylelong/halfway/client/src/reportWebVitals.ts",[],[],"/Users/kylelong/halfway/client/src/components/WordSwitcher.tsx",[],[],"/Users/kylelong/halfway/client/src/components/Menu/Menu.tsx",[],[],"/Users/kylelong/halfway/client/src/components/Logo/Logo.tsx",[],[],"/Users/kylelong/halfway/client/src/styles/common.tsx",[],[],"/Users/kylelong/halfway/client/src/App.tsx",[],[],"/Users/kylelong/halfway/client/src/components/Create/Create.tsx",["111"],[],"import {Fragment, useState} from \"react\";\nimport {Dialog, Transition, Disclosure} from \"@headlessui/react\";\nimport {ChevronRightIcon} from \"@heroicons/react/20/solid\";\nimport lifeBuoyWhite from \"../../assets/lifeBuoyWhite.svg\";\nimport {\n  Bars3Icon,\n  ChartPieIcon,\n  HomeIcon,\n  XMarkIcon,\n  UserPlusIcon,\n  ChartBarIcon,\n  InboxArrowDownIcon,\n  ShoppingCartIcon,\n  NewspaperIcon,\n  DevicePhoneMobileIcon,\n  GiftIcon,\n} from \"@heroicons/react/24/outline\";\nimport facebookBlank from \"../../assets/facebook_blank.svg\";\nimport instagramBlank from \"../../assets/instagram_blank.svg\";\nimport youtubeBlank from \"../../assets/youtube_blank.svg\";\nimport twitterBlank from \"../../assets/twitter_blank.svg\";\nimport linkedinBlank from \"../../assets/linkedin_blank.svg\";\nimport tiktokBlank from \"../../assets/tiktok_blank.svg\";\nimport youtube from \"../../assets/youtube.svg\";\nimport facebook from \"../../assets/facebook.svg\";\nimport linkedin from \"../../assets/linkedin.svg\";\nimport tiktok from \"../../assets/tiktok.svg\";\nimport instagram from \"../../assets/instagram.svg\";\nimport twitter from \"../../assets/twitter.svg\";\nimport TinyEditor from \"./TinyEditor\";\nimport FilterMenu from \"./FilterMenu\";\nimport {CONTENT_TYPE} from \"../../types/basics\";\nimport Modal from \"./Modal\";\n\nconst navigation = [\n  // {id: 0, name: \"About\", href: \"/about\", icon: HomeIcon},\n  // {id: 1, name: \"Purchase\", href: \"/pricing\", icon: GiftIcon},\n  {\n    id: 0,\n    name: \"Writing\",\n    href: \"#\",\n    icon: NewspaperIcon,\n    type: CONTENT_TYPE.Writing,\n    children: [\n      {\n        name: \"Paper\",\n        href: \"#\",\n        options: [\"idea\", \"outline\", \"sentence\", \"paragraph\"],\n      },\n      {\n        name: \"Blog\",\n        href: \"#\",\n        options: [\"idea\", \"outline\", \"sentence\", \"paragraph\"],\n      },\n\n      {\n        name: \"Newsletter\",\n        href: \"#\",\n        options: [\"idea\", \"outline\", \"sentence\", \"paragraph\"],\n      },\n    ],\n  },\n  {\n    id: 1,\n    name: \"Social\",\n    href: \"#\",\n    icon: DevicePhoneMobileIcon,\n    type: CONTENT_TYPE.Social,\n    children: [\n      {\n        name: \"Twitter\",\n        href: \"#\",\n        options: [\"tweet\", \"thread\", \"reply\"],\n        icon: twitterBlank,\n        coloredIcon: twitter,\n      },\n      {\n        name: \"LinkedIn\",\n        href: \"#\",\n        options: [\"post\", \"article\", \"hashtags\"],\n        icon: linkedinBlank,\n        coloredIcon: linkedin,\n      },\n      {\n        name: \"Youtube\",\n        href: \"#\",\n        options: [\"video idea\", \"title\", \"subtitle\", \"description\"],\n        icon: youtubeBlank,\n        coloredIcon: youtube,\n      },\n      {\n        name: \"Instagram\",\n        href: \"#\",\n        options: [\"caption\", \"bio\", \"ad\", \"dm\", \"comment\", \"hashtags\"],\n        icon: instagramBlank,\n        coloredIcon: instagram,\n      },\n      {\n        name: \"Tiktok\",\n        href: \"#\",\n        options: [\"video idea\", \"title\", \"caption\", \"hashtags\"],\n        icon: tiktokBlank,\n        coloredIcon: tiktok,\n      },\n      {\n        name: \"Facebook\",\n        href: \"#\",\n        options: [\"post\", \"message\", \"ad\"],\n        icon: facebookBlank,\n        coloredIcon: facebook,\n      },\n    ],\n  },\n  {\n    id: 2,\n    name: \"Marketing\",\n    type: CONTENT_TYPE.Marketing,\n    href: \"#\",\n    icon: ChartPieIcon,\n    options: [\"campaign\", \"slogan\", \"affiliate\"],\n  },\n  {\n    id: 3,\n    name: \"SEO\",\n    href: \"#\",\n    type: CONTENT_TYPE.Seo,\n    icon: ChartBarIcon,\n    options: [\"keywords\", \"content\"],\n  },\n  {\n    id: 4,\n    name: \"Email\",\n    href: \"#\",\n    type: CONTENT_TYPE.Email,\n    icon: InboxArrowDownIcon,\n    options: [\"subject\", \"message\"],\n  },\n  {\n    id: 5,\n    name: \"Advertising\",\n    href: \"#\",\n    type: CONTENT_TYPE.Advertising,\n    icon: UserPlusIcon,\n    options: [\"campaign\", \"slogan\", \"affiliate\"],\n  },\n  {\n    id: 6,\n    name: \"E-commerce\",\n    href: \"#\",\n    type: CONTENT_TYPE.Ecommerce,\n    icon: ShoppingCartIcon,\n    options: [\"product title\", \"product description\", \"keywords\"],\n  },\n];\nconst teams = [\n  {id: 1, name: \"Templates\", href: \"#\", initial: \"T\", current: false},\n];\nfunction classNames(...classes: any) {\n  return classes.filter(Boolean).join(\" \");\n}\n//#endregion\n\nexport default function Create() {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [navId, setNavId] = useState(0);\n  const [childIndex, setChildIndex] = useState(0);\n  const [selectedItem, setSelectedItem] = useState(navigation[0]);\n\n  const handleNavClick = (idx: number, item: any) => {\n    // TODO: child index\n    setNavId(idx);\n    setSelectedItem(item);\n  };\n  const handleChildClick = (index: number) => {\n    setChildIndex(index);\n  };\n\n  return (\n    <>\n      <div>\n        <Transition.Root show={sidebarOpen} as={Fragment}>\n          <Dialog\n            as=\"div\"\n            className=\"relative z-50 lg:hidden\"\n            onClose={setSidebarOpen}\n          >\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <div className=\"fixed inset-0 bg-gray-900/80\" />\n            </Transition.Child>\n\n            <div className=\"fixed inset-0 flex\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"transition ease-in-out duration-300 transform\"\n                enterFrom=\"-translate-x-full\"\n                enterTo=\"translate-x-0\"\n                leave=\"transition ease-in-out duration-300 transform\"\n                leaveFrom=\"translate-x-0\"\n                leaveTo=\"-translate-x-full\"\n              >\n                <Dialog.Panel className=\"relative mr-16 flex w-full max-w-xs flex-1\">\n                  <Transition.Child\n                    as={Fragment}\n                    enter=\"ease-in-out duration-300\"\n                    enterFrom=\"opacity-0\"\n                    enterTo=\"opacity-100\"\n                    leave=\"ease-in-out duration-300\"\n                    leaveFrom=\"opacity-100\"\n                    leaveTo=\"opacity-0\"\n                  >\n                    <div className=\"absolute left-full top-0 flex w-16 justify-center pt-5\">\n                      <button\n                        type=\"button\"\n                        className=\"-m-2.5 p-2.5\"\n                        onClick={() => setSidebarOpen(false)}\n                      >\n                        <span className=\"sr-only\">Close sidebar</span>\n                        <XMarkIcon\n                          className=\"h-6 w-6 text-white\"\n                          aria-hidden=\"true\"\n                        />\n                      </button>\n                    </div>\n                  </Transition.Child>\n                  {/* Sidebar component, swap this element with another sidebar if you like */}\n                  <div className=\"flex grow flex-col gap-y-5 overflow-y-auto bg-indigo-600 px-6 pb-2\">\n                    <div className=\"flex h-16 shrink-0 items-center\">\n                      <img\n                        className=\"h-8 w-auto\"\n                        src={lifeBuoyWhite}\n                        alt=\"Your Company\"\n                      />\n                      <div className=\"text-white ml-2 text-2xl font-bold\">\n                        halfway\n                      </div>\n                    </div>\n                    <nav className=\"flex flex-1 flex-col\">\n                      <ul className=\"flex flex-1 flex-col gap-y-7\">\n                        <li>\n                          <ul className=\"-mx-2 space-y-1\">\n                            {navigation.map((item, idx) => (\n                              <li\n                                key={item.name}\n                                onClick={() => handleNavClick(idx, item)}\n                              >\n                                {!item.children ? (\n                                  <a\n                                    href={item.href}\n                                    className={classNames(\n                                      item.id === navId\n                                        ? \"bg-gray-50 text-indigo-600\"\n                                        : \"text-indigo-200 hover:text-white hover:bg-indigo-700\",\n                                      \"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold\"\n                                    )}\n                                  >\n                                    <item.icon\n                                      className={classNames(\n                                        item.id === navId\n                                          ? \"text-indigo-600\"\n                                          : \"text-indigo-200 group-hover:text-white\",\n                                        \"h-6 w-6 shrink-0\"\n                                      )}\n                                      aria-hidden=\"true\"\n                                    />\n                                    {item.name}\n                                  </a>\n                                ) : (\n                                  <Disclosure as=\"div\">\n                                    {({open}) => (\n                                      <>\n                                        <Disclosure.Button\n                                          className={classNames(\n                                            item.id === navId\n                                              ? \"bg-gray-50 text-indigo-700\"\n                                              : \"hover:bg-indigo-700 text-indigo-200\",\n                                            \"flex items-center w-full text-left rounded-md p-2 gap-x-3 text-sm leading-6 font-semibold text-indigo-200\"\n                                          )}\n                                        >\n                                          <item.icon\n                                            className={classNames(\n                                              item.id === navId\n                                                ? \"text-indigo-600\"\n                                                : \"text-indigo-200\",\n                                              \"h-6 w-6 shrink-0\"\n                                            )}\n                                            aria-hidden=\"true\"\n                                          />\n                                          {item.name}\n                                          <ChevronRightIcon\n                                            className={classNames(\n                                              open\n                                                ? \"rotate-90 text-gray-500\"\n                                                : \"text-gray-400\",\n                                              \"ml-auto h-5 w-5 shrink-0\"\n                                            )}\n                                            aria-hidden=\"true\"\n                                          />\n                                        </Disclosure.Button>\n                                        <Disclosure.Panel\n                                          as=\"ul\"\n                                          className=\"mt-1 px-2\"\n                                        >\n                                          {item.children.map(\n                                            (subItem: any, index: number) => (\n                                              <li\n                                                key={subItem.name}\n                                                onClick={() =>\n                                                  handleChildClick(index)\n                                                }\n                                                className=\"flex flex-row pl-7 rounded-md hover:bg-indigo-700 hover:text-gray-50 hover:cursor-pointer\"\n                                              >\n                                                {/* 44px */}\n                                                {subItem.icon && (\n                                                  <img\n                                                    alt=\"icon\"\n                                                    src={subItem.icon}\n                                                    className=\"w-8\"\n                                                  />\n                                                )}\n                                                <Disclosure.Button\n                                                  as=\"a\"\n                                                  href={subItem.href}\n                                                  className={classNames(\n                                                    subItem.current\n                                                      ? \"bg-gray-50\"\n                                                      : \"hover:bg-indigo-700 hover:text-gray-50\",\n                                                    \"block rounded-md py-2 pr-2 pl-2 text-sm leading-6 text-indigo-200\"\n                                                  )}\n                                                >\n                                                  {subItem.name}\n                                                </Disclosure.Button>\n                                              </li>\n                                            )\n                                          )}\n                                        </Disclosure.Panel>\n                                      </>\n                                    )}\n                                  </Disclosure>\n                                )}\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                        <li>\n                          <div className=\"text-xs font-semibold leading-6 text-indigo-200\">\n                            Your items\n                          </div>\n                          <ul className=\"-mx-2 mt-2 space-y-1\">\n                            {teams.map((team) => (\n                              <li key={team.name}>\n                                <a\n                                  href={team.href}\n                                  className={classNames(\n                                    team.current\n                                      ? \"bg-gray-50 text-indigo-600\"\n                                      : \"text-indigo-200 hover:text-white hover:bg-indigo-700\",\n                                    \"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold\"\n                                  )}\n                                >\n                                  <span\n                                    className={classNames(\n                                      team.current\n                                        ? \"text-indigo-600 border-indigo-600\"\n                                        : \"text-gray-400 border-indigo-400 group-hover:border-indigo-400 group-hover:text-gray-400\",\n                                      \"flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border text-[0.625rem] font-medium bg-indigo-500\"\n                                    )}\n                                  >\n                                    {team.initial}\n                                  </span>\n                                  <span className=\"truncate\">{team.name}</span>\n                                </a>\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                      </ul>\n                    </nav>\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </Dialog>\n        </Transition.Root>\n\n        {/* Static sidebar for desktop */}\n        <div className=\"hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col\">\n          {/* Sidebar component, swap this element with another sidebar if you like */}\n          <div className=\"flex grow flex-col gap-y-5 overflow-y-auto border-r border-gray-200 bg-indigo-600 px-6\">\n            <div className=\"flex h-16 shrink-0 items-center\">\n              <img\n                className=\"h-8 w-auto\"\n                src={lifeBuoyWhite}\n                alt=\"Your Company\"\n              />\n              <div className=\"text-white ml-2 text-2xl font-bold\">halfway</div>\n            </div>\n            <nav className=\"flex flex-1 flex-col\">\n              <ul className=\"flex flex-1 flex-col gap-y-7\">\n                <li>\n                  <ul className=\"-mx-2 space-y-1\">\n                    <li>\n                      <a\n                        href=\"/about\"\n                        className=\"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold text-indigo-200 hover:text-white hover:bg-indigo-700\"\n                      >\n                        <HomeIcon className=\"h-6 w-6 shrink-0 text-indigo-200 group-hover:text-white\" />\n                        About\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        href=\"/pricing\"\n                        className=\"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold text-indigo-200 hover:text-white hover:bg-indigo-700\"\n                      >\n                        <span className=\"animate-ping absolute inline-flex h-6 w-6 rounded-full bg-white opacity-75\"></span>\n                        <GiftIcon className=\"h-6 w-6 shrink-0 text-indigo-200 group-hover:text-white\" />\n                        Purchase\n                      </a>\n                    </li>\n                    {navigation.map((item, idx) => (\n                      <li\n                        key={item.name}\n                        onClick={() => handleNavClick(idx, item)}\n                      >\n                        {!item.children ? (\n                          <a\n                            href={item.href}\n                            className={classNames(\n                              item.id === navId\n                                ? \"bg-gray-50 text-indigo-600\"\n                                : \"text-indigo-200 hover:text-white hover:bg-indigo-700\",\n                              \"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold\"\n                            )}\n                          >\n                            <item.icon\n                              className={classNames(\n                                item.id === navId\n                                  ? \"text-indigo-600\"\n                                  : \"text-indigo-200 group-hover:text-white\",\n                                \"h-6 w-6 shrink-0\"\n                              )}\n                              aria-hidden=\"true\"\n                            />\n                            {item.name}\n                          </a>\n                        ) : (\n                          <Disclosure as=\"div\">\n                            {({open}) => (\n                              <>\n                                <Disclosure.Button\n                                  className={classNames(\n                                    item.id === navId\n                                      ? \"bg-gray-50 text-indigo-700\"\n                                      : \"hover:bg-indigo-700 text-indigo-200\",\n                                    \"flex items-center w-full text-left rounded-md p-2 gap-x-3 text-sm leading-6 font-semibold text-indigo-200\"\n                                  )}\n                                >\n                                  <item.icon\n                                    className={classNames(\n                                      item.id === navId\n                                        ? \"text-indigo-600\"\n                                        : \"text-indigo-200\",\n                                      \"h-6 w-6 shrink-0\"\n                                    )}\n                                    aria-hidden=\"true\"\n                                  />\n                                  {item.name}\n                                  <ChevronRightIcon\n                                    className={classNames(\n                                      open\n                                        ? \"rotate-90 text-gray-500\"\n                                        : \"text-gray-400\",\n                                      \"ml-auto h-5 w-5 shrink-0\"\n                                    )}\n                                    aria-hidden=\"true\"\n                                  />\n                                </Disclosure.Button>\n                                <Disclosure.Panel as=\"ul\" className=\"mt-1 px-2\">\n                                  {item.children.map(\n                                    (subItem: any, index: number) => (\n                                      <li\n                                        key={subItem.name}\n                                        onClick={() => handleChildClick(index)}\n                                        className=\"flex flex-row pl-7 rounded-md text-indigo-200 hover:bg-indigo-700 hover:text-gray-50 hover:cursor-pointer\"\n                                      >\n                                        {/* 44px */}\n                                        {subItem.icon && (\n                                          <img\n                                            alt=\"icon\"\n                                            src={subItem.icon}\n                                            className=\"w-6\"\n                                          />\n                                        )}\n                                        <Disclosure.Button\n                                          as=\"a\"\n                                          href={subItem.href}\n                                          className={classNames(\n                                            subItem.id === navId\n                                              ? \"bg-gray-50\"\n                                              : \"hover:bg-indigo-700 hover:text-gray-50\",\n                                            \"block rounded-md py-2 pr-2 pl-2 text-sm leading-6 text-indigo-200\"\n                                          )}\n                                        >\n                                          {subItem.name}\n                                        </Disclosure.Button>\n                                      </li>\n                                    )\n                                  )}\n                                </Disclosure.Panel>\n                              </>\n                            )}\n                          </Disclosure>\n                        )}\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n                <li>\n                  <div className=\"text-xs font-semibold leading-6 text-indigo-200\">\n                    Your items\n                  </div>\n                  <ul className=\"-mx-2 mt-2 space-y-1\">\n                    {teams.map((team) => (\n                      <li key={team.name}>\n                        <a\n                          href={team.href}\n                          className={classNames(\n                            team.current\n                              ? \"bg-gray-50 text-indigo-600\"\n                              : \"text-indigo-200 hover:text-white hover:bg-indigo-700\",\n                            \"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold\"\n                          )}\n                        >\n                          <span\n                            className={classNames(\n                              team.current\n                                ? \"text-indigo-600 border-indigo-600\"\n                                : \"text-gray-400 border-indigo-400 group-hover:border-indigo-400 bg-indigo-500\",\n                              \"flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border text-[0.625rem] font-medium bg-white\"\n                            )}\n                          >\n                            {team.initial}\n                          </span>\n                          <span className=\"truncate\">{team.name}</span>\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n                <li className=\"-mx-6 mt-auto\">\n                  {/* <a\n                    href=\"/profile\"\n                    className=\"flex items-center gap-x-4 px-6 py-3 text-sm font-semibold leading-6 text-gray-900 hover:bg-indigo-500 rounded-md\"\n                  >\n                     <img\n                      className=\"h-8 w-8 rounded-full bg-gray-50\"\n                      src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                      alt=\"\"\n                    /> \n\n                     <UserCircleIcon className=\"h-8 w-8 shrink-0 text-gray-200\" />\n                    <span className=\"sr-only\">Your profile</span>\n                    <span aria-hidden=\"true\">Kyle Long</span> \n                  </a> */}\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n\n        <div className=\"sticky top-0 z-40 flex items-center gap-x-6 bg-white px-4 py-4 shadow-sm sm:px-6 lg:hidden\">\n          <button\n            type=\"button\"\n            className=\"-m-2.5 p-2.5 text-gray-700 lg:hidden\"\n            onClick={() => setSidebarOpen(true)}\n          >\n            <span className=\"sr-only\">Open sidebar</span>\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n          <div className=\"flex-1 text-sm font-semibold leading-6 text-gray-900\">\n            Dashboard\n          </div>\n          {/* <a href=\"/profile\">\n            <span className=\"sr-only\">Your profile</span>\n             <img\n              className=\"h-8 w-8 rounded-full bg-gray-50\"\n              src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n              alt=\"\"\n            /> \n            <UserCircleIcon className=\"h-8 w-8 shrink-0 text-indigo-400\" />\n          </a> */}\n        </div>\n\n        <main className=\"lg:pl-72\">\n          <div className=\"xl:pr-96\">\n            <div className=\"px-4 py-10 sm:px-6 lg:px-8 lg:py-6\">\n              {/* Main area w-full sm:w-4/6 lg:2/6 */}\n              <TinyEditor />\n\n              <div className=\"xl:hidden mt-6\">\n                <FilterMenu item={selectedItem} childIndex={childIndex} />\n              </div>\n            </div>\n          </div>\n        </main>\n\n        <aside className=\"fixed inset-y-0 right-0 hidden w-96 overflow-y-auto border-l border-gray-200 px-4 py-6 sm:px-6 lg:px-8 xl:block\">\n          {/* Secondary column (hidden on smaller screens) */}\n          <FilterMenu item={selectedItem} childIndex={childIndex} />\n        </aside>\n      </div>\n    </>\n  );\n}\n","/Users/kylelong/halfway/client/src/components/Create/TinyEditor.jsx",[],[],["112"],"/Users/kylelong/halfway/client/src/components/Create/FilterMenu.tsx",["113"],[],"/Users/kylelong/halfway/client/src/components/Create/InputBox.tsx",[],[],"/Users/kylelong/halfway/client/src/components/Create/SelectMenu.tsx",[],[],"/Users/kylelong/halfway/client/src/types/basics.ts",[],[],"/Users/kylelong/halfway/client/src/components/Create/DropDownMenu.tsx",[],[],"/Users/kylelong/halfway/client/src/components/Create/TextArea.tsx",[],[],"/Users/kylelong/halfway/client/src/components/Create/Modal.tsx",[],[],"/Users/kylelong/halfway/client/src/components/About/Pricing.tsx",[],[],"/Users/kylelong/halfway/client/src/components/About/Footer.tsx",[],[],"/Users/kylelong/halfway/client/src/components/About/About.tsx",[],[],"/Users/kylelong/halfway/client/src/types/constants.ts",[],[],"/Users/kylelong/halfway/client/src/components/Create/OpenAIModal.tsx",[],[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":33,"column":8,"nodeType":"118","messageId":"119","endLine":33,"endColumn":13},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"120","line":38,"column":12,"nodeType":"118","messageId":"119","endLine":38,"endColumn":19},"no-new-object",["121"],"@typescript-eslint/no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","no-object-constructor"]